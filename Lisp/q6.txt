(defun triangle(n)
    (cond ((and (typep n 'integer) (> n 0))
           (loop for i from 1 to n
               do (loop for j from i to n
                   do (princ "*")
               )
               (write-line "")
               (write-line ""))
          )
          ((and (typep n 'integer) (< n 0))
           (setf n (abs n))
           (loop for i from 1 to n
               do (loop for j from 1 to i
                   do (princ " "))
                        
               do (loop for j from i to n
                   do (princ "*"))
                  
               (write-line ""))
          )
        
          ((not(typep n 'integer))
               (write-line "Invalid number; please enter  a positive or a negative integer.")
          )
        
          ((= n 0)
               (write-line "Invalid number; please enter a positive or a negative integer")
       )
    )
)
